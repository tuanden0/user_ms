syntax = "proto3";

package api;

option go_package = "user_ms/backend/core/api;api";

import "google/api/annotations.proto";
import "user.proto";
import "health.proto";
import "authentication.proto";

service UserAPI {
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get : "/v1/ping"
    };
  }
  rpc Create(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post : "/v1/user"
      body : "*"
    };
  }
  rpc Retrieve(RetrieveUserRequest) returns (User) {
    option (google.api.http) = {
      get : "/v1/user/{id}"
    };
  }
  rpc Update(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      patch : "/v1/user/{id}"
      body : "*"
    };
  }
  rpc Delete(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete : "/v1/user/{id}"
    };
  }
  rpc List(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      post : "/v1/users"
      body : "*"
    };
  }
}

service AuthenService {
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      get : "/v1/auth/ping"
    };
  }
  rpc Login(UserLoginRequest) returns (UserLoginResponse) {
    option (google.api.http) = {
      post : "/v1/auth/login"
      body : "*"
    };
  }
}